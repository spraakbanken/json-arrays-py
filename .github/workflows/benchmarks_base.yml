on:
  push:
    branches:
      - main
name: benchmarks_base

env:
  MINIMUM_PYTHON_VERSION: "3.9"
  UV_VERSION: "0.5.1"

jobs:
  benchmark_base_branch:
    name: ubuntu / ${{ matrix.python-version }} / continuous benchmarking with bencher
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    permissions:
      checks: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up uv
        uses: astral-sh/setup-uv@v4
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: make dev
      - uses: bencherdev/bencher@main
      - name: Track base branch benchmarks with Bencher
        run: |
          source .venv/bin/activate
          bencher run \
          --project json-arrays-py \
          --token '${{ secrets.BENCHER_API_TOKEN }}' \
          --branch main \
          --testbed 'ci-ubuntu-latest-python-${{ matrix.python-version }}' \
          --threshold-measure latency \
          --threshold-test t_test \
          --threshold-max-sample-size 64 \
          --threshold-upper-boundary 0.99 \
          --thresholds-reset \
          --err \
          --adapter python_pytest \
          --file results.json \
          --github-actions '${{ secrets.GITHUB_TOKEN }}' \
          "pytest --benchmark-json results.json benchmarks"
