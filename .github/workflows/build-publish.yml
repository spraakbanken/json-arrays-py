name: Build & Publish

on:
  push:
    branches:
      - main
    tags:
      - v*

env:
  POETRY_VERSION: "1.3.1"
  MINIMUM_PYTHON_VERSION: "3.9"

jobs:
  checks:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.task.name }} ${{ matrix.json-lib }} (${{ matrix.os }})
    strategy:
      max-parallel: 4
      fail-fast: true
      matrix:
        # Only run checks on ubuntu for MINIMUM_PYTHON_VERSION
        os: [ubuntu-latest]
        json-lib: [orjson, json]
        task:
          - name: Type check
            run: make type-check
          - name: Lint code
            run: make lint
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ env.MINIMUM_PYTHON_VERSION }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

       #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: make install-ci
      #----------------------------------------------
      # Install json library, if not using stock
      #----------------------------------------------
      - name: Install json library
        if: matrix.json-lib != 'json'
        run: make install-${{ matrix.json-lib }}
      #----------------------------------------------
      # Run matrix task
      #----------------------------------------------
      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}

  tests:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.task.name }} py-${{ matrix.python-version }} ${{ matrix.json-lib }} (${{ matrix.os }})
    strategy:
      max-parallel: 4
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]
        json-lib: [orjson, json]
        task:
          - name: Run tests
            run: make run-all-tests

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

       #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: make install-ci
      #----------------------------------------------
      # Install json library, if not using stock
      #----------------------------------------------
      - name: Install json library
        if: matrix.json-lib != 'json'
        run: make install-${{ matrix.json-lib }}
      #----------------------------------------------
      # Run matrix task
      #----------------------------------------------
      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}

  publish:
    needs: [checks, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.MINIMUM_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MINIMUM_PYTHON_VERSION }}
      - name: install poetry
        run: pip install poetry
      - name: Build distribution
        run: |
          poetry build
          echo "github.ref = ${{ github.ref }}"
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.repository == 'spraakbanken/json-streams-py' && !startsWith(github.ref, 'refs/tags/')
        continue-on-error: true
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.repository == 'spraakbanken/json-streams-py' && startsWith(github.ref, 'refs/tags/')
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
