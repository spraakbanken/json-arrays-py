name: Build & Publish

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    name: Lint with pylint (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install poetry
        run: pip install poetry
      - name: Lint with pylint
        run: make check-pylint

  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.task.name }} py-${{ matrix.python-version }} ${{ matrix.json-lib }} (${{ matrix.os }})
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        json-lib: [orjson, json]
        task:
          - name: Typecheck
            run: make check-mypy
            report_coverage: false
          - name: Run tests
            run: make run-all-tests-w-coverage
            report_coverage: true
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install poetry
        run: pip install poetry
      - name: Install dependencies
        run: make install-dev
      - name: Install json library
        if: matrix.json-lib != 'json'
        run: make install-${{ matrix.json-lib }}
      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}
      - name: Upload coverage to Codecov
        if: matrix.task.report_coverage
        uses: codecov/codecov-action@v2
        with:
          # directory: ./coverage/reports/
          # env_vars: OS,PYTHON
          fail_ci_if_error: true
          # files: ./coverage1.xml,./coverage2.xml
          # flags: unittests
          # name: codecov-umbrella
          verbose: true
      # - name: Coveralls
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.github_token }}
  publish:
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
      - name: install poetry
        run: pip install poetry
      - name: Build distribution
        run: |
          poetry build
          echo "github.ref = ${{ github.ref }}"
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.repository == 'spraakbanken/json-streams-py' && !startsWith(github.ref, 'refs/tags/')
        continue-on-error: true
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.repository == 'spraakbanken/json-streams-py' && startsWith(github.ref, 'refs/tags/')
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
