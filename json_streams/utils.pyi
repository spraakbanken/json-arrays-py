from enum import Enum
from typing import Any, Generator, IO, Union

def get_name_of_file(fp: IO) -> str: ...
def is_jsonl(name: str) -> bool: ...
def to_bytes(s: Union[str, bytes, bytearray]) -> Union[bytes, bytearray]: ...

class Sink:
    sink: Any = ...
    def __init__(self, sink: Generator[None, Any, None]) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type: Any, exc_value: Any, exc_traceback: Any) -> None: ...

class JsonFormat(str, Enum):
    JSON: str = ...
    JSON_LINES: str = ...
